version: '3'
services:
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - kafka-net

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "hieuung:2:1"
    networks:
      - kafka-net

  spark-master:
    build: ./spark-node
    container_name: spark-master
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
       - ./spark-streaming:/opt/spark-apps
    environment:
      - SPARK_LOCAL_IP=spark-master
      - SPARK_WORKLOAD=master
    networks:
      - kafka-net

  spark-worker:
    build: ./spark-node
    container_name: spark-worker
    ports:
      - "9091:8080"
      - "7000:7000"
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=128GB
      - SPARK_DRIVER_MEMORY=128GB
      - SPARK_EXECUTOR_MEMORY=128GB
      - SPARK_WORKLOAD=worker
      - SPARK_LOCAL_IP=spark-worker
    volumes:
       - ./spark-streaming:/opt/spark-apps
    networks:
      - kafka-net

  jobmanager:
    image: pyflink:latest
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - ./flink-streaming:/opt/flink/app
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        parallelism.default: 2
    networks:
      - kafka-net     

  taskmanager:
    image: pyflink:latest
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    volumes:
      - ./flink-streaming:/opt/flink/app
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        parallelism.default: 2
    networks:
      - kafka-net      

  producer:
    build: ./producer
    container_name: producer
    depends_on: 
      - kafka
    networks:
      - kafka-net

  consumer:
    build: ./consumer
    container_name: consumer
    depends_on: 
      - kafka
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
